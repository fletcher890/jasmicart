// Generated by CoffeeScript 1.7.1
(function() {
  define([], function() {
    var Basket;
    return Basket = (function() {
      function Basket() {
        this.items = [];
        this.distinctCount = 0;
        this.totalCount = 0;
      }

      Basket.prototype.add = function(item) {
        var currentItem;
        if (this.itemExistsInBasket(item)) {
          currentItem = this.getItemFromBasket(item);
          currentItem.quantity++;
        } else {
          this.items.push({
            item: item,
            quantity: 1
          });
        }
        this.distinctCount = this.items.length;
        return this.totalCount++;
      };

      Basket.prototype.empty = function() {
        this.items = [];
        this.distinctCount = 0;
        return this.totalCount = 0;
      };

      Basket.prototype.itemExistsInBasket = function(item) {
        var basketItem, _i, _len, _ref;
        _ref = this.items;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          basketItem = _ref[_i];
          if (basketItem.item.id === item.id) {
            return true;
          }
        }
        return false;
      };

      Basket.prototype.getItemFromBasket = function(item) {
        var basketItem, currentItem, _i, _len, _ref;
        currentItem = void 0;
        _ref = this.items;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          basketItem = _ref[_i];
          if (basketItem.item.id === item.id) {
            return basketItem;
          }
        }
        return false;
      };

      return Basket;

    })();
  });

}).call(this);
